<% provide :head_tags do %>
    <meta name='turbolinks-visit-control' content='reload'>
    <script>
        document.addEventListener("DOMContentLoaded", initMap2);
    </script>
<% end %>

<%= form_with(model: address, local: true) do |form| %>
  <% if address.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(address.errors.count, "error") %> prohibited this address from being saved:</h2>

      <ul>
      <% address.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :direccion %>
    <%= form.text_field :name, id:'autocomplete', placeholder:"Enter your address", onFocus:"geolocate()", type:"text", class:"form-control" %>
  </div>




    <div class="form-group">
  <%= form.label :Tiendas, class: 'h4 custom-font'  %> <br>
    <%= form.select(:store_id, options_for_select(Store.pluck(:name, :id)), { prompt: "Seleccionar Tienda" }, { class: "form form-group form-control" }) %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>



<script src=<%= google_maps_api_autocomplete_url %> async defer></script>
<script>



var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
  };

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete(
    /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
    {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed');
}

</script>