<%= form_with(model: address, local: true) do |form| %>
  <% if address.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(address.errors.count, "error") %> prohibited this address from being saved:</h2>

      <ul>
      <% address.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :direccion, class: 'h4' %>
    <%= form.text_field :name, placeholder:"Enter your address", onFocus:"initializeAutocomplete()", id:"locality", class:"form-control" %>
    </div>

    <div class="form-group">
  <%= form.label :Tiendas, class: 'h4 custom-font'  %> <br>
    <%= form.select(:store_id, options_for_select(Store.pluck(:name, :id)), { prompt: "Seleccionar Tienda" }, { class: "form form-group form-control" }) %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<script src="<%= google_maps_api_autocomplete_url %>" async defer></script>

<script type="text/javascript"> 

// AUTOCOMPLETADO DE DIRECCIONES //

  function initializeAutocomplete(){
    var input = document.getElementById('locality');
    // var options = {
    //   types: ['(regions)'],
    //   componentRestrictions: {country: "IN"}
    // };
    var options = {}

    var autocomplete = new google.maps.places.Autocomplete(input, options);

    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      var place = autocomplete.getPlace();
      var lat = place.geometry.location.lat();
      var lng = place.geometry.location.lng();
      var placeId = place.place_id;
      // to set city name, using the locality param
      document.getElementById("latitude").value = lat;
      document.getElementById("longitude").value = lng;
      document.getElementById("location_id").value = placeId;
    });
  }
</script>
